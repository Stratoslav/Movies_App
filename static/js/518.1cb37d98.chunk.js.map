{"version":3,"file":"static/js/518.1cb37d98.chunk.js","mappings":"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","sources":["API/movieApi.ts","Components/ApiKey.ts","Components/Movies/MoviesPage/MoviesPage.tsx"],"sourcesContent":["//components\nimport { AppDispatch } from '../redux/store';\nimport { imagesMovieActions } from '../redux/movieDetailsSlice';\nimport { ActorActions } from '../redux/movieActorSlice';\nimport { popularMoviesAction } from '../redux/movieSlice';\nimport { peopleMovieActions } from '../redux/peopleSlice';\nimport { apiKey } from '../Components/ApiKey';\n//lib\nimport axios from 'axios';\n\nconst mainProtocol = 'https://api.themoviedb.org/3';\n// const dispatch = useDispatch<AppDispatch>()\nexport const getMovieImage = (id: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      ` \n${mainProtocol}/movie/${id}/images?api_key=${apiKey}   `\n    )\n    .then(({ data }) => {\n      dispatch(imagesMovieActions.getImageDetails(data));\n    });\n};\n\nexport const getActor = (actorId: number, dispatch: AppDispatch): any => {\n  axios\n    .get(`${mainProtocol}/person/${actorId}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(ActorActions.addActor(data));\n    });\n};\nexport const getPopularMovies = (dispatch: AppDispatch) => {\n  axios\n    .get(`${mainProtocol}/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\n\nexport const searchMovie = (query: string, dispatch: AppDispatch) => {\n  try {\n    if (query.length > 0) {\n      axios\n\n        .get(`${mainProtocol}/search/movie?api_key=${apiKey}&query=${query}`)\n        .then(({ data }) => {\n          dispatch(popularMoviesAction.getSearchMovies(data.results));\n        });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPersonData = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      console.log(data);\n      dispatch(peopleMovieActions.getPersonDetails(data));\n    });\n};\n\nexport const getPersonMovie = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}/movie_credits?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPersonMovie(data));\n    });\n};\n\nexport const getPopularMovie = (dispatch: AppDispatch) => {\n  axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\nexport const getMovieDetails = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      // setMovie(data);\n      dispatch(imagesMovieActions.getMovieDetails(data));\n    });\n  if (id) {\n    getMovieImage(id, dispatch);\n  }\n};\n\nexport const getPeople = (query: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      `\n\nhttps://api.themoviedb.org/3/search/person?api_key=${apiKey}&query=${query}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPeopleDetails(data));\n    });\n};\n","export const apiKey = 'be91785ae562dae75d4f006499f353c9';\n","//react\nimport { ChangeEvent, FormEvent, useState } from 'react';\nimport { NavLink } from 'react-router-dom';\n//lin\n//components\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport { searchMovie } from '../../../API/movieApi';\n//styles\nimport './moviesPage.scss';\nimport { MoviesSearchType } from '../../../types';\n\nconst MoviesPage = () => {\n  const { searchedMovie } = useSelector((s: RootState) => s.popularMovies);\n  const [query, setQuery] = useState('');\n  const dispatch = useDispatch();\n\n  const handleChangeForm = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    searchMovie(query, dispatch);\n  };\n  const onChangeQuery = (e: ChangeEvent<HTMLInputElement>) => {\n    setQuery(e.currentTarget.value);\n  };\n\n  return (\n    <div className=\"movies container\">\n      <h1>Movie Page</h1>\n      <div className=\"container__item\">\n        <form className=\"form\" onSubmit={handleChangeForm}>\n          <input\n            onChange={onChangeQuery}\n            value={query}\n            type=\"text\"\n            className=\"form__field\"\n            placeholder=\"Find movie\"\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn--primary btn--inside uppercase\"\n          >\n            Find\n          </button>\n        </form>\n      </div>\n      <ul>\n        {searchedMovie.length > 0\n          ? searchedMovie.map(\n              ({\n                id,\n                original_title,\n                backdrop_path,\n                overview,\n                release_date\n              }: MoviesSearchType) => (\n                <li key={id} className=\"page__list-item\">\n                  <NavLink to={`/movies/${id}`}>\n                    <div className=\"wrap__pages-1\">\n                      {backdrop_path ? (\n                        <img\n                          height={210}\n                          width={140}\n                          src={`https://www.themoviedb.org/t/p/w94_and_h141_bestv2/${backdrop_path}`}\n                          alt=\"f\"\n                        />\n                      ) : (\n                        <img\n                          height={210}\n                          width={140}\n                          src=\"https://img.myloview.fr/images/questionnaire-question-mark-sign-query-symbol-asking-man-scholar-pupil-student-thinking-icon-blue-3d-rendering-400-245310281.jpg\"\n                          alt=\"\"\n                        />\n                      )}{' '}\n                    </div>\n                    <div className=\"wrap__page-2\">\n                      <h3>{original_title}</h3>\n                      <p>{release_date}</p>\n\n                      <div>{overview}</div>\n                    </div>\n                  </NavLink>\n                </li>\n              )\n            )\n          : \"Sorry, but film with such name don't exist!\"}\n      </ul>\n    </div>\n  );\n};\n\nexport default MoviesPage;\n"],"names":["mainProtocol","getMovieImage","id","dispatch","axios","apiKey","then","data","imagesMovieActions","getActor","actorId","ActorActions","searchMovie","query","length","popularMoviesAction","results","e","console","log","getPersonData","peopleMovieActions","getPersonMovie","getPopularMovie","getMovieDetails","getPeople","searchedMovie","useSelector","s","popularMovies","useState","setQuery","useDispatch","className","onSubmit","preventDefault","onChange","currentTarget","value","type","placeholder","map","original_title","backdrop_path","overview","release_date","to","height","width","src","alt"],"sourceRoot":""}