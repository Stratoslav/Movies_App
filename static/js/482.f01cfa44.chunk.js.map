{"version":3,"file":"static/js/482.f01cfa44.chunk.js","mappings":"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","sources":["API/movieApi.ts","Components/ApiKey.ts","Components/Movies/MovieDetails/MovieDetailsImage.tsx","Components/Movies/MovieDetails/MovieDetails.tsx"],"sourcesContent":["//components\nimport { AppDispatch } from '../redux/store';\nimport { imagesMovieActions } from '../redux/movieDetailsSlice';\nimport { ActorActions } from '../redux/movieActorSlice';\nimport { popularMoviesAction } from '../redux/movieSlice';\nimport { peopleMovieActions } from '../redux/peopleSlice';\nimport { apiKey } from '../Components/ApiKey';\n//lib\nimport axios from 'axios';\n\nconst mainProtocol = 'https://api.themoviedb.org/3';\n// const dispatch = useDispatch<AppDispatch>()\nexport const getMovieImage = (id: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      ` \n${mainProtocol}/movie/${id}/images?api_key=${apiKey}   `\n    )\n    .then(({ data }) => {\n      dispatch(imagesMovieActions.getImageDetails(data));\n    });\n};\n\nexport const getActor = (actorId: number, dispatch: AppDispatch): any => {\n  axios\n    .get(`${mainProtocol}/person/${actorId}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(ActorActions.addActor(data));\n    });\n};\nexport const getPopularMovies = (dispatch: AppDispatch) => {\n  axios\n    .get(`${mainProtocol}/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\n\nexport const searchMovie = (query: string, dispatch: AppDispatch) => {\n  try {\n    if (query.length > 0) {\n      axios\n\n        .get(`${mainProtocol}/search/movie?api_key=${apiKey}&query=${query}`)\n        .then(({ data }) => {\n          dispatch(popularMoviesAction.getSearchMovies(data.results));\n        });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPersonData = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      console.log(data);\n      dispatch(peopleMovieActions.getPersonDetails(data));\n    });\n};\n\nexport const getPersonMovie = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}/movie_credits?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPersonMovie(data));\n    });\n};\n\nexport const getPopularMovie = (dispatch: AppDispatch) => {\n  axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\nexport const getMovieDetails = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      // setMovie(data);\n      dispatch(imagesMovieActions.getMovieDetails(data));\n    });\n  if (id) {\n    getMovieImage(id, dispatch);\n  }\n};\n\nexport const getPeople = (query: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      `\n\nhttps://api.themoviedb.org/3/search/person?api_key=${apiKey}&query=${query}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPeopleDetails(data));\n    });\n};\n","export const apiKey = 'be91785ae562dae75d4f006499f353c9';\n","//react\nimport { useSelector } from 'react-redux';\n//styles\nimport 'react-multi-carousel/lib/styles.css';\n// components\nimport { RootState } from '../../../redux/store';\n//lib\nimport Carousel from 'react-multi-carousel';\nconst uniqid = require('uniqid');\n\nexport const MovieDetailsImage = () => {\n  const responsive = {\n    superLargeDesktop: {\n      breakpoint: { max: 4000, min: 3000 },\n      items: 5\n    },\n    desktop: {\n      breakpoint: { max: 3000, min: 1024 },\n      items: 3\n    },\n    tablet: {\n      breakpoint: { max: 1024, min: 464 },\n      items: 2\n    },\n    mobile: {\n      breakpoint: { max: 464, min: 0 },\n      items: 1\n    }\n  };\n  const images = useSelector((s: RootState) => s.imageDetails.images);\n\n  return (\n    <>\n      {images.backdrops ? (\n        <>\n          {' '}\n          <h2 style={{ width: '1200px', margin: '20px auto' }}>Media</h2>\n          <div\n            className={'details__image'}\n            style={{ width: '100%', margin: '0 auto' }}\n          >\n            <Carousel\n              className=\"Carousel\"\n              swipeable={false}\n              draggable={false}\n              showDots={true}\n              responsive={responsive}\n              ssr={true} // means to render carousel on server-side.\n              infinite={true}\n              autoPlaySpeed={1000}\n              keyBoardControl={true}\n              customTransition={'all .5'}\n              transitionDuration={500}\n              containerClass=\"carousel-container\"\n              removeArrowOnDeviceType={['tablet', 'mobile']}\n              dotListClass=\"custom-dot-list-style\"\n              itemClass=\"carousel-item-padding-40-px\"\n            >\n              {images?.backdrops?.map((image) => (\n                <div className=\"details__list-img-item\" key={uniqid()}>\n                  <img\n                    className=\"details__list-img-backdrop\"\n                    src={`https://www.themoviedb.org/t/p/w533_and_h300_bestv2/${image.file_path}`}\n                    alt=\"\"\n                  />\n                </div>\n              ))}\n            </Carousel>\n          </div>{' '}\n        </>\n      ) : (\n        'Loading'\n      )}\n    </>\n  );\n};\n","//react\nimport { useParams, useNavigate, NavLink, Outlet } from 'react-router-dom';\nimport { useEffect } from 'react';\n//components\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MovieDetailsImage } from './MovieDetailsImage';\nimport { getMovieDetails, getMovieImage } from '../../../API/movieApi';\nimport { RootState } from '../../../redux/store';\n//styles\nimport './details.scss';\n\nconst MovieDetails = () => {\n  const dispatch = useDispatch();\n  const movie = useSelector((s: RootState) => s.imageDetails.movie);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const goToBack = () => navigate(-1);\n\n  useEffect(() => {\n    if (id) {\n      getMovieDetails(id, dispatch);\n      getMovieImage(id, dispatch);\n    }\n  }, [id]);\n\n  return (\n    <>\n      <section className=\"details\">\n        {/* <button className=\"back-button\" onClick={goToBack}>\n          <span></span> Backs\n        </button> */}\n        <div className=\"background\">\n          <img\n            className=\"details__img\"\n            src={\n              movie.backdrop_path\n                ? `\thttps://www.themoviedb.org/t/p/w1920_and_h800_multi_faces/${movie.backdrop_path}`\n                : 'https://pibig.info/uploads/posts/2022-12/1669910493_1-pibig-info-p-kosmos-zadnii-fon-krasivo-1.jpg'\n            }\n            alt=\"\"\n          />\n        </div>\n        <h1 className=\"details__title\"> {movie.original_title}</h1>\n        <div className=\"details__wrap\">\n          <div className=\"wrap-1\">\n            <img\n              className=\"details__backdrop\"\n              width=\"300\"\n              src={`https://www.themoviedb.org/t/p/w600_and_h900_bestv2${movie.poster_path}`}\n              alt={movie.backdrop_path}\n            />\n          </div>\n          <div className=\"wrap-2\">\n            <p className=\"details__date\">{movie.release_date}</p>\n            <p className=\"details__status\">\n              <big style={{ fontWeight: 500 }}>status:</big> {movie.status}\n            </p>\n            <div className=\"details__tagline\">\n              <big style={{ fontWeight: 500 }}>tagline:</big> {movie.tagline}\n            </div>\n            <div className=\"details__average\">\n              <span className=\"details__average-score\">\n                <big style={{ fontWeight: 500 }}> User Score: </big>\n                {movie.vote_average}\n              </span>\n              <span className=\"details__average-vote\">\n                <big style={{ fontWeight: 500 }}>Vote:</big>\n                {movie.vote_count}\n              </span>\n            </div>\n            <big style={{ fontWeight: 500 }}>Genre:</big>\n            {movie.genres &&\n              movie.genres.map((genre) => (\n                <span className=\"details__genre\" key={genre.id}>\n                  {genre.name}\n                </span>\n              ))}\n            <div className=\"details__popularity\">\n              <big style={{ fontWeight: 500 }}>popularity:</big>{' '}\n              {movie.popularity}\n            </div>\n            <div className=\"details__overview\">\n              <big style={{ fontWeight: 500 }}> Overview:</big> <br />\n              <p className=\"details__overview-text\"> {movie.overview}</p>\n              <div className=\"details__company\">\n                <big style={{ fontWeight: 500 }}>Production:</big>{' '}\n                {movie.production_companies &&\n                  movie.production_companies.map((company) => (\n                    <p key={company.id} className=\"details__company-prod\">\n                      {' '}\n                      {company.name}\n                    </p>\n                  ))}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <MovieDetailsImage />\n      </section>\n      <div className=\"more__information-details\">\n        <NavLink to=\"review\">Review</NavLink>\n        <NavLink to=\"credits\">Credits</NavLink>\n      </div>\n\n      <Outlet />\n    </>\n  );\n};\n\nexport default MovieDetails;\n"],"names":["mainProtocol","getMovieImage","id","dispatch","axios","apiKey","then","data","imagesMovieActions","getActor","actorId","ActorActions","searchMovie","query","length","popularMoviesAction","results","e","console","log","getPersonData","peopleMovieActions","getPersonMovie","getPopularMovie","getMovieDetails","getPeople","uniqid","require","MovieDetailsImage","images","useSelector","s","imageDetails","backdrops","style","width","margin","className","swipeable","draggable","showDots","responsive","superLargeDesktop","breakpoint","max","min","items","desktop","tablet","mobile","ssr","infinite","autoPlaySpeed","keyBoardControl","customTransition","transitionDuration","containerClass","removeArrowOnDeviceType","dotListClass","itemClass","map","image","src","file_path","alt","useDispatch","movie","useParams","useNavigate","useEffect","backdrop_path","original_title","poster_path","release_date","fontWeight","status","tagline","vote_average","vote_count","genres","genre","name","popularity","overview","production_companies","company","to"],"sourceRoot":""}