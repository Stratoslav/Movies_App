{"version":3,"file":"static/js/3.94235435.chunk.js","mappings":"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","sources":["API/movieApi.ts","Components/ApiKey.ts","Components/Movies/Cast/Cast.tsx"],"sourcesContent":["//components\nimport { AppDispatch } from '../redux/store';\nimport { imagesMovieActions } from '../redux/movieDetailsSlice';\nimport { ActorActions } from '../redux/movieActorSlice';\nimport { popularMoviesAction } from '../redux/movieSlice';\nimport { peopleMovieActions } from '../redux/peopleSlice';\nimport { apiKey } from '../Components/ApiKey';\n//lib\nimport axios from 'axios';\n\nconst mainProtocol = 'https://api.themoviedb.org/3';\n// const dispatch = useDispatch<AppDispatch>()\nexport const getMovieImage = (id: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      ` \n${mainProtocol}/movie/${id}/images?api_key=${apiKey}   `\n    )\n    .then(({ data }) => {\n      dispatch(imagesMovieActions.getImageDetails(data));\n    });\n};\n\nexport const getActor = (actorId: number, dispatch: AppDispatch): any => {\n  axios\n    .get(`${mainProtocol}/person/${actorId}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(ActorActions.addActor(data));\n    });\n};\nexport const getPopularMovies = (dispatch: AppDispatch) => {\n  axios\n    .get(`${mainProtocol}/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\n\nexport const searchMovie = (query: string, dispatch: AppDispatch) => {\n  try {\n    if (query.length > 0) {\n      axios\n\n        .get(`${mainProtocol}/search/movie?api_key=${apiKey}&query=${query}`)\n        .then(({ data }) => {\n          dispatch(popularMoviesAction.getSearchMovies(data.results));\n        });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPersonData = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      console.log(data);\n      dispatch(peopleMovieActions.getPersonDetails(data));\n    });\n};\n\nexport const getPersonMovie = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}/movie_credits?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPersonMovie(data));\n    });\n};\n\nexport const getPopularMovie = (dispatch: AppDispatch) => {\n  axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\nexport const getMovieDetails = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      // setMovie(data);\n      dispatch(imagesMovieActions.getMovieDetails(data));\n    });\n  if (id) {\n    getMovieImage(id, dispatch);\n  }\n};\n\nexport const getPeople = (query: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      `\n\nhttps://api.themoviedb.org/3/search/person?api_key=${apiKey}&query=${query}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPeopleDetails(data));\n    });\n};\n","export const apiKey = 'be91785ae562dae75d4f006499f353c9';\n","//react\nimport { NavLink, useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\n//lib\nimport Axios from 'axios';\n//component\nimport { apiKey } from '../../ApiKey';\n\nimport { ActorsType } from '../../../types';\n//styles\nimport './cast.scss';\nimport { getActor } from '../../../API/movieApi';\n\nconst Cast = () => {\n  const [actors, setActors] = useState([]);\n  const dispatch = useDispatch();\n\n  const { id } = useParams();\n\n  useEffect(() => {\n    try {\n      if (id) {\n        Axios.get(\n          `https://api.themoviedb.org/3/movie/${id}/credits?api_key=${apiKey}`\n        ).then(({ data }) => {\n          setActors(data.cast);\n        });\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  }, [id]);\n  return (\n    <>\n      <ul className=\"cast__list\">\n        {actors.map(({ id, name, character, profile_path }: ActorsType) => (\n          <li\n            className=\"cast__list-item\"\n            key={id}\n            onClick={() => getActor(id, dispatch)}\n          >\n            <NavLink to={`/actors/${id}`}>\n              <img\n                className=\"cast__list-img\"\n                width={120}\n                src={\n                  profile_path\n                    ? `https://www.themoviedb.org/t/p/w138_and_h175_face${profile_path}`\n                    : 'https://i.pinimg.com/originals/f1/0f/f7/f10ff70a7155e5ab666bcdd1b45b726d.jpg'\n                }\n                alt=\"im\"\n              />\n              <p className=\"actor-character\">{character}</p>\n              <p className=\"actor-name\">{name}</p>\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["mainProtocol","getMovieImage","id","dispatch","axios","apiKey","then","data","imagesMovieActions","getActor","actorId","ActorActions","searchMovie","query","length","popularMoviesAction","results","e","console","log","getPersonData","peopleMovieActions","getPersonMovie","getPopularMovie","getMovieDetails","getPeople","useState","actors","setActors","useDispatch","useParams","useEffect","Axios","cast","error","className","map","name","character","profile_path","onClick","to","width","src","alt"],"sourceRoot":""}