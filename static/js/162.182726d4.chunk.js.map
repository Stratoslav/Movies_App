{"version":3,"file":"static/js/162.182726d4.chunk.js","mappings":"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","sources":["API/movieApi.ts","Components/ApiKey.ts","Components/People/People.tsx"],"sourcesContent":["//components\nimport { AppDispatch } from '../redux/store';\nimport { imagesMovieActions } from '../redux/movieDetailsSlice';\nimport { ActorActions } from '../redux/movieActorSlice';\nimport { popularMoviesAction } from '../redux/movieSlice';\nimport { peopleMovieActions } from '../redux/peopleSlice';\nimport { apiKey } from '../Components/ApiKey';\n//lib\nimport axios from 'axios';\n\nconst mainProtocol = 'https://api.themoviedb.org/3';\n// const dispatch = useDispatch<AppDispatch>()\nexport const getMovieImage = (id: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      ` \n${mainProtocol}/movie/${id}/images?api_key=${apiKey}   `\n    )\n    .then(({ data }) => {\n      dispatch(imagesMovieActions.getImageDetails(data));\n    });\n};\n\nexport const getActor = (actorId: number, dispatch: AppDispatch): any => {\n  axios\n    .get(`${mainProtocol}/person/${actorId}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(ActorActions.addActor(data));\n    });\n};\nexport const getPopularMovies = (dispatch: AppDispatch) => {\n  axios\n    .get(`${mainProtocol}/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\n\nexport const searchMovie = (query: string, dispatch: AppDispatch) => {\n  try {\n    if (query.length > 0) {\n      axios\n\n        .get(`${mainProtocol}/search/movie?api_key=${apiKey}&query=${query}`)\n        .then(({ data }) => {\n          dispatch(popularMoviesAction.getSearchMovies(data.results));\n        });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPersonData = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      console.log(data);\n      dispatch(peopleMovieActions.getPersonDetails(data));\n    });\n};\n\nexport const getPersonMovie = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}/movie_credits?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPersonMovie(data));\n    });\n};\n\nexport const getPopularMovie = (dispatch: AppDispatch) => {\n  axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\nexport const getMovieDetails = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      // setMovie(data);\n      dispatch(imagesMovieActions.getMovieDetails(data));\n    });\n  if (id) {\n    getMovieImage(id, dispatch);\n  }\n};\n\nexport const getPeople = (query: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      `\n\nhttps://api.themoviedb.org/3/search/person?api_key=${apiKey}&query=${query}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPeopleDetails(data));\n    });\n};\n","export const apiKey = 'be91785ae562dae75d4f006499f353c9';\n","import { ChangeEvent, FormEvent, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\nimport { getPeople } from '../../API/movieApi';\n\nimport { RootState } from '../../redux/store';\nimport './people.scss';\nconst People = () => {\n  const [query, setQuery] = useState('');\n  const { peoples } = useSelector((s: RootState) => s.people);\n\n  const dispatch = useDispatch();\n\n  const handleSubmitForm = (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    getPeople(query, dispatch);\n  };\n  const getInputValue = (e: ChangeEvent<HTMLInputElement>) => {\n\n    setQuery(e.target.value);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"container__item\">\n        <form className=\"form\" onSubmit={handleSubmitForm}>\n          <input\n            onChange={getInputValue}\n            type=\"text\"\n            className=\"form__field\"\n            placeholder=\"Find movie\"\n          />\n          <button\n            type=\"submit\"\n            className=\"btn btn--primary btn--inside uppercase\"\n          >\n            Find\n          </button>\n        </form>\n      </div>\n\n      <ul className=\"people__list\">\n        {peoples.length > 0\n          ? peoples.map(({id, name, profile_path}) => (\n              <div key={id}>\n                {name.length < 3 ? null : (\n                  <li className=\"people__list-item\" key={id}>\n                    <NavLink to={`/actors/${id}`}>\n                      <p className=\"people__list-text\">{name}</p>\n                    \n                    <img\n                      width={250}\n                      height={250}\n                          alt=\"\"\n                        src={profile_path ?\n                          `https://www.themoviedb.org/t/p/w235_and_h235_face/${profile_path}`\n                         : \"https://t3.ftcdn.net/jpg/02/43/51/48/360_F_243514868_XDIMJHNNJYKLRST05XnnTj0MBpC4hdT5.jpg\"}\n                        />\n     \n                    </NavLink>\n                  </li>\n                )}\n              </div>\n            ))\n          : \"Sorry, but actor with such name doesn't exist!\"}\n      </ul>\n    </div>\n  );\n};\n\nexport default People;\n"],"names":["mainProtocol","getMovieImage","id","dispatch","axios","apiKey","then","data","imagesMovieActions","getActor","actorId","ActorActions","searchMovie","query","length","popularMoviesAction","results","e","console","log","getPersonData","peopleMovieActions","getPersonMovie","getPopularMovie","getMovieDetails","getPeople","useState","setQuery","peoples","useSelector","s","people","useDispatch","className","onSubmit","preventDefault","onChange","target","value","type","placeholder","map","name","profile_path","to","width","height","alt","src"],"sourceRoot":""}