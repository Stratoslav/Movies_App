{"version":3,"file":"static/js/802.af2e73b0.chunk.js","mappings":"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","sources":["API/movieApi.ts","Components/ApiKey.ts","Components/People/PersonMovie.tsx","Components/People/PeopleDetails.tsx"],"sourcesContent":["//components\nimport { AppDispatch } from '../redux/store';\nimport { imagesMovieActions } from '../redux/movieDetailsSlice';\nimport { ActorActions } from '../redux/movieActorSlice';\nimport { popularMoviesAction } from '../redux/movieSlice';\nimport { peopleMovieActions } from '../redux/peopleSlice';\nimport { apiKey } from '../Components/ApiKey';\n//lib\nimport axios from 'axios';\n\nconst mainProtocol = 'https://api.themoviedb.org/3';\n// const dispatch = useDispatch<AppDispatch>()\nexport const getMovieImage = (id: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      ` \n${mainProtocol}/movie/${id}/images?api_key=${apiKey}   `\n    )\n    .then(({ data }) => {\n      dispatch(imagesMovieActions.getImageDetails(data));\n    });\n};\n\nexport const getActor = (actorId: number, dispatch: AppDispatch): any => {\n  axios\n    .get(`${mainProtocol}/person/${actorId}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(ActorActions.addActor(data));\n    });\n};\nexport const getPopularMovies = (dispatch: AppDispatch) => {\n  axios\n    .get(`${mainProtocol}/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\n\nexport const searchMovie = (query: string, dispatch: AppDispatch) => {\n  try {\n    if (query.length > 0) {\n      axios\n\n        .get(`${mainProtocol}/search/movie?api_key=${apiKey}&query=${query}`)\n        .then(({ data }) => {\n          dispatch(popularMoviesAction.getSearchMovies(data.results));\n        });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPersonData = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      console.log(data);\n      dispatch(peopleMovieActions.getPersonDetails(data));\n    });\n};\n\nexport const getPersonMovie = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}/movie_credits?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPersonMovie(data));\n    });\n};\n\nexport const getPopularMovie = (dispatch: AppDispatch) => {\n  axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\nexport const getMovieDetails = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      // setMovie(data);\n      dispatch(imagesMovieActions.getMovieDetails(data));\n    });\n  if (id) {\n    getMovieImage(id, dispatch);\n  }\n};\n\nexport const getPeople = (query: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      `\n\nhttps://api.themoviedb.org/3/search/person?api_key=${apiKey}&query=${query}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPeopleDetails(data));\n    });\n};\n","export const apiKey = 'be91785ae562dae75d4f006499f353c9';\n","//react\nimport { useSelector } from 'react-redux';\nimport { NavLink } from 'react-router-dom';\n//redux\nimport { RootState } from '../../redux/store';\n//styles\nimport './people.scss';\n\nexport const PersonMovie = () => {\n  const movies = useSelector((s: RootState) => s.people.movies);\n  let crew = movies.cast ? [...movies.cast] : [];\n\n  const sortMoviesByAverage = crew.sort(\n    (a, b) => b.vote_average - a.vote_average\n  );\n\n  return (\n    <div>\n      <h2 className=\"person__movie-title\">Movies</h2>\n      <div className=\"person__movie-list\">\n        {sortMoviesByAverage.map(({id, vote_average, poster_path, original_title}) => (\n          <div key={id}>\n            {id && vote_average !== 0 ? (\n              <div className=\"person__movie-item\">\n                <NavLink to={`movies/${id}`}>\n                  <img\n                    className=\"person__movie-img\"\n                    alt=\"\"\n                    src={\n                      poster_path\n                        ? `https://www.themoviedb.org/t/p/w150_and_h225_bestv2/${poster_path}`\n                        : 'https://img.myloview.fr/images/questionnaire-question-mark-sign-query-symbol-asking-man-scholar-pupil-student-thinking-icon-blue-3d-rendering-400-245310281.jpg'\n                    }\n                  />\n                  <h3>{original_title}</h3>\n                  <p>Average: {vote_average.toString().slice(0, 3)}</p>\n                </NavLink>\n              </div>\n            ) : null}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\n","//react\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router';\n//components\nimport { getPersonData, getPersonMovie } from '../../API/movieApi';\nimport { RootState } from '../../redux/store';\nimport { PersonMovie } from './PersonMovie';\n\nconst PeopleDetails = () => {\n  const personData = useSelector((s: RootState) => s.people.peopleDetails);\n\n  const dispatch = useDispatch();\n  const { id } = useParams();\n  const navigate = useNavigate();\n  const makeStepBack = () => {\n    navigate(-1);\n  };\n  useEffect(() => {\n    getPersonData(id, dispatch);\n    getPersonMovie(id, dispatch);\n  }, [id, dispatch]);\n  return (\n    <>\n      <div className=\" people__details\">\n        <div>\n          <button onClick={makeStepBack}>Back</button>\n          <h1>{personData.name}</h1>\n          {personData.adult ? '18+' : ''}\n          <img\n            src={`https://www.themoviedb.org/t/p/w300_and_h450_bestv2/${personData.profile_path}`}\n            alt=\"\"\n          />\n        </div>\n\n        <div className=\"details__wrap-2\">\n          <p className=\" people__details-descr\">{personData.biography}</p>\n          <div>\n            <div className=\" people__details-birthday\">\n              Date of Birthday: {personData.birthday}\n            </div>\n            <div className=\" people__details-born\">\n              {personData.place_of_birth}\n            </div>\n          </div>\n          <div className=\" people__details-popularity\">\n            Popularity:{' '}\n            {personData.popularity &&\n              personData.popularity.toLocaleString().slice(0, 4)}\n            /100\n          </div>\n          <p>gender:{personData.gender}</p>\n        </div>\n      </div>\n      <PersonMovie />\n    </>\n  );\n};\n\nexport default PeopleDetails;\n"],"names":["mainProtocol","getMovieImage","id","dispatch","axios","apiKey","then","data","imagesMovieActions","getActor","actorId","ActorActions","searchMovie","query","length","popularMoviesAction","results","e","console","log","getPersonData","peopleMovieActions","getPersonMovie","getPopularMovie","getMovieDetails","getPeople","PersonMovie","movies","useSelector","s","people","sortMoviesByAverage","cast","sort","a","b","vote_average","className","map","poster_path","original_title","to","alt","src","toString","slice","personData","peopleDetails","useDispatch","useParams","navigate","useNavigate","useEffect","onClick","name","adult","profile_path","biography","birthday","place_of_birth","popularity","toLocaleString","gender"],"sourceRoot":""}