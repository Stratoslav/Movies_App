{"version":3,"file":"static/js/0.465e3021.chunk.js","mappings":"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","sources":["API/movieApi.ts","Components/ApiKey.ts","Components/Movies/HomePage/HomePage.tsx"],"sourcesContent":["//components\nimport { AppDispatch } from '../redux/store';\nimport { imagesMovieActions } from '../redux/movieDetailsSlice';\nimport { ActorActions } from '../redux/movieActorSlice';\nimport { popularMoviesAction } from '../redux/movieSlice';\nimport { peopleMovieActions } from '../redux/peopleSlice';\nimport { apiKey } from '../Components/ApiKey';\n//lib\nimport axios from 'axios';\n\nconst mainProtocol = 'https://api.themoviedb.org/3';\n// const dispatch = useDispatch<AppDispatch>()\nexport const getMovieImage = (id: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      ` \n${mainProtocol}/movie/${id}/images?api_key=${apiKey}   `\n    )\n    .then(({ data }) => {\n      dispatch(imagesMovieActions.getImageDetails(data));\n    });\n};\n\nexport const getActor = (actorId: number, dispatch: AppDispatch): any => {\n  axios\n    .get(`${mainProtocol}/person/${actorId}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(ActorActions.addActor(data));\n    });\n};\nexport const getPopularMovies = (dispatch: AppDispatch) => {\n  axios\n    .get(`${mainProtocol}/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\n\nexport const searchMovie = (query: string, dispatch: AppDispatch) => {\n  try {\n    if (query.length > 0) {\n      axios\n\n        .get(`${mainProtocol}/search/movie?api_key=${apiKey}&query=${query}`)\n        .then(({ data }) => {\n          dispatch(popularMoviesAction.getSearchMovies(data.results));\n        });\n    }\n  } catch (e) {\n    console.log(e);\n  }\n};\n\nexport const getPersonData = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      console.log(data);\n      dispatch(peopleMovieActions.getPersonDetails(data));\n    });\n};\n\nexport const getPersonMovie = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(\n      `\n${mainProtocol}/person/${id}/movie_credits?api_key=${apiKey}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPersonMovie(data));\n    });\n};\n\nexport const getPopularMovie = (dispatch: AppDispatch) => {\n  axios\n    .get(`https://api.themoviedb.org/3/trending/all/day?api_key=${apiKey}`)\n    .then(({ data }) => {\n      dispatch(popularMoviesAction.getPopularMovies(data.results));\n    });\n};\nexport const getMovieDetails = (\n  id: string | undefined,\n  dispatch: AppDispatch\n) => {\n  axios\n    .get(`https://api.themoviedb.org/3/movie/${id}?api_key=${apiKey}`)\n    .then(({ data }) => {\n      // setMovie(data);\n      dispatch(imagesMovieActions.getMovieDetails(data));\n    });\n  if (id) {\n    getMovieImage(id, dispatch);\n  }\n};\n\nexport const getPeople = (query: string, dispatch: AppDispatch) => {\n  axios\n    .get(\n      `\n\nhttps://api.themoviedb.org/3/search/person?api_key=${apiKey}&query=${query}`\n    )\n    .then(({ data }) => {\n      dispatch(peopleMovieActions.getPeopleDetails(data));\n    });\n};\n","export const apiKey = 'be91785ae562dae75d4f006499f353c9';\n","//react\nimport { useEffect } from 'react';\nimport { NavLink } from 'react-router-dom';\n//components\nimport './homePage.scss';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../redux/store';\nimport { getPopularMovie } from '../../../API/movieApi';\n\nconst HomePage = () => {\n  const { movies } = useSelector((s: RootState) => s.popularMovies);\n  const dispatch = useDispatch();\n\n  console.log(movies);\n  useEffect(() => {\n    getPopularMovie(dispatch);\n  }, []);\n\n  return (\n    <div>\n      <h1 className=\"page_title\">Top movies on this week</h1>\n      <ul className=\"page_list\">\n        {movies.map(\n          ({\n            id,\n            original_title,\n            release_date,\n            name,\n            first_air_date,\n            poster_path,\n            overview\n          }) => (\n            <li className={'page_list_item'} key={id}>\n              <NavLink className={'page_list_link'} to={`/movies/${id}`}>\n                <img\n                  src={`https://www.themoviedb.org/t/p/w220_and_h330_face/${poster_path}`}\n                  alt=\"\"\n                />\n                <h3 className=\"page_list-title\">\n                  {original_title ? original_title : name}\n                </h3>\n                <p>\n                  {overview.length > 80\n                    ? `${overview.slice(0, 80)}...`\n                    : overview}\n                </p>\n                <div>{release_date ? release_date : first_air_date}</div>\n              </NavLink>\n            </li>\n          )\n        )}\n      </ul>\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["mainProtocol","getMovieImage","id","dispatch","axios","apiKey","then","data","imagesMovieActions","getActor","actorId","ActorActions","searchMovie","query","length","popularMoviesAction","results","e","console","log","getPersonData","peopleMovieActions","getPersonMovie","getPopularMovie","getMovieDetails","getPeople","movies","useSelector","s","popularMovies","useDispatch","useEffect","className","map","original_title","release_date","name","first_air_date","poster_path","overview","to","src","alt","slice"],"sourceRoot":""}